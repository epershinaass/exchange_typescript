syntax = "proto3";

package order;

service OrderController {
  rpc CreateOrder (OrderRequest) returns (OrderResponse);
  rpc GetOrdersStatuses (GetOrderStatusesRequest) returns (GetOrderStatusesResponse);
  rpc GetDoneDeals (GetDoneDealsRequest) returns (GetDoneDealsResponse);
}

enum OrderType {
  BUY = 0;
  SELL = 1;
}

enum OrderStatusEnum {
  PROCESSING = 0;
  DONE = 1;
  CANCELED = 2;
}

message OrderRequest {
  string order_id = 1;
  string user_id = 2;
  string product_id = 3;
  uint64 quantity = 4;
  uint64 cost = 5;
  OrderType order_type = 6;
  bool is_full_size = 7; // сделка должна произойти разом
}

message OrderResponse {
  int32 status = 1;
}

message GetOrderStatusesResponse {
  repeated OrderStatus orders = 1;
}

message OrderStatus {
  string id = 1;
  OrderStatusEnum status =  2;
  string created_at = 3;
  string message = 4;
  string order_id = 5;
  string user_id = 6;
  string product_id = 7;
  uint64 quantity = 8;
  uint64 cost = 9;
  OrderType order_type = 10;
  bool is_full_size = 11;
}

message GetOrderStatusesRequest {
  string user_id = 1;
}

message DoneDeal {
  string date = 1;
  string seller_user_id = 2;
  string buyer_user_id = 3;
  string product_id = 4;
  uint64 quantity = 5;
  uint64 cost = 6;
}

message GetDoneDealsRequest {
  string user_id = 1;
}

message GetDoneDealsResponse {
  repeated DoneDeal deals = 1;
}
