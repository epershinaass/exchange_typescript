name: Build facade image
on:
  pull_request:
    types: [opened, reopened]
    paths:
    - 'facade/**'
  workflow_dispatch:

env:
  IMAGE_REGISTRY: exchangetypescript.jfrog.io
  IMAGE_REPOSITORY: facade-docker
  DOCKER_IMAGE: facade


jobs:
  build-images:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Docker Buildx üêã
      uses: docker/setup-buildx-action@v2

    - name: Login to JFrog üê∏
      uses: docker/login-action@v1
      with:
        registry: exchangetypescript.jfrog.io
        username: ${{ secrets.JFROG_USERNAME_BUILD_USERNAME }}
        password: ${{ secrets.JFROG_USERNAME_BUILD_ACCESS_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.DOCKER_IMAGE }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      id: buildx
      with:
        context: ./facade
        file: ./Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        build-args: buildDate=$(date +'%Y-%m-%d')
        push: true
        cache-from: type=registry,ref=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.DOCKER_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.DOCKER_IMAGE }}:buildcache,mode=max
        tags: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.DOCKER_IMAGE }}:latest,${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.DOCKER_IMAGE }}:${{ github.run_id }}
