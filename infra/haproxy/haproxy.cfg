global
  log stdout  format raw  local0
  maxconn 4000
  daemon

  # turn on stats unix socket
  stats socket /var/lib/haproxy/stats

  # utilize system-wide crypto-policies
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

defaults
  mode                    http
  log                     global
  option                  httplog
  option                  dontlognull
  option http-server-close
  option forwardfor       except 127.0.0.0/8
  option                  redispatch
  option http-buffer-request
  retries                 3
  timeout http-request    5s
  timeout queue           1m
  timeout connect         10s
  timeout client          30s
  timeout server          1m
  timeout http-keep-alive 10s
  timeout check           10s
  maxconn                 3000
  balance roundrobin

# Single http
frontend http-in
  mode http
  bind *:80
  # bind *:443 ssl crt /usr/local/etc/haproxy/haproxy.pem
  http-request set-header X-Content-Type-Options "nosniff"
  http-request set-header X-Frame-Options "sameorigin"
  http-request set-header X-XSS-Protection "1; mode=block"
  http-request set-header Cache-control "no-cache"
  http-request set-header Content-Security-Policy "default-src 'self'; font-src 'self'; img-src 'self'; script-src 'self'; style-src 'self'; frame-src 'self'"
  http-request set-header Permissions-Policy "camera=(), geolocation=(), microphone=()"
  http-request set-header Referrer-Policy "same-origin"
  http-request set-header Host %[req.hdr(Host)]
  http-request track-sc0 src table per_ip_rates
# Tarpit abusers
  # timeout tarpit 5s
  # http-request tarpit if { sc_http_req_rate(0) gt 100 }
# Silently Dropping Requests
  http-request silent-drop if { sc_http_req_rate(0) gt 100 }
  http-request deny unless { req.hdr(user-agent) -m found }
  use_backend grafana_backend if { path /grafana } or { path_beg /grafana/ }
  use_backend prometheus_backend if { path /prometheus } or { path_beg /prometheus/ }
  use_backend minio_backend if { path /minio } or { path_beg /minio/ }
  use_backend vault if { path /ui } or { path_beg /ui/ } or { path /v1 } or { path_beg /v1/ }

frontend tcp-in-minio
  description "Minio api proxy"
  option tcplog
  mode tcp
  bind *:8080
  timeout client 1m
  tcp-request content track-sc0 src table per_ip_connections
  tcp-request content reject if { sc_conn_cur(0) gt 10 } || { sc_conn_rate(0) gt 50 }
  use_backend minio_api

frontend tcp-in-vault
  description "Vault api proxy"
  option tcplog
  mode tcp
  bind *:8200
  timeout client 1m
  tcp-request content track-sc0 src table per_ip_connections
  tcp-request content reject if { sc_conn_cur(0) gt 2 } || { sc_conn_rate(0) gt 10 }
  use_backend vault_api

# Frontend for loki Simple scalable deployment mode
frontend loki
  mode http
  bind *:3100
  acl internal_networks src 192.168.0.0/16 172.16.0.0/12 10.0.0.0/8 127.0.0.1
  http-request deny if ! internal_networks
  use_backend cluster if { path /ring } or { path_beg /ring/ } or { path /memberlist } or { path_beg /memberlist/ } or { path /config } or { path_beg /config/ } or { path /metrics } or { path_beg /metrics/ } or { path /ready } or { path_beg /ready/ }
  use_backend write if { path /loki/api/v1/push } or { path_beg /loki/api/v1/push }
  use_backend read if { path /loki/api/v1/tail } or { path_beg /loki/api/v1/tail }
  acl query-frontend path_reg /loki/api/.*

  use_backend query-frontend if query-frontend

# Backend for ip_rates
backend per_ip_rates
  description "ip_rates"
  stick-table type ip size 1m expire 10m store http_req_rate(10s)

backend per_ip_connections
  description "connections_rates"
  stick-table type ip size 1m expire 1m store conn_cur,conn_rate(1m)

# Backend for grafana
backend grafana_backend
  description "grafana"
  http-request set-path %[path,regsub(^/grafana/?,/)]
  server grafana grafana:3000 check

# Backend for prometheus
backend prometheus_backend
  description "prometheus"
  http-request set-path %[path,regsub(^/prometheus/?,/)]
  server prometheus prometheus:9090 check

# Backend for minio s3
backend minio_backend
  description "Minio"
  balance leastconn
  http-request set-path %[path,regsub(^/minio/?,/)]
  option httpchk GET /minio/health/live
  http-check expect string minio
  server minio minio:9001 check

backend minio_api
  description "Minio API"
  balance leastconn
  mode tcp
  option tcp-check
  server minio minio:9000 check

backend vault_api
  description "Vault API"
  balance leastconn
  mode tcp
  option tcp-check
  server vault vault:8200 check

# Backend for loki read
backend read
  description "loki read"
  balance source
  server loki-read loki-read:3100 check

# Backend for loki write
backend write
  description "loki write"
  balance source
  server loki-write loki-write:3100 check

# Backend for loki cluster
backend cluster
  description "loki cluster"
  balance roundrobin

  server read loki-read:3100 check
  server write loki-write:3100 check

# Backend for loki queri
backend query-frontend
  description "loki query frontend"
  balance roundrobin

  server loki-frontend loki-frontend:3100 check

# Vault backend
backend vault
  description "Vault"
  server vault vault:8200 check

# Stats Page
listen stats
  bind *:8050
  mode http
  stats enable
  stats uri /stats
  stats hide-version
  stats realm HAProxy\ Statistics
