global
  log stdout  format raw  local0
  maxconn 4000
  daemon

  # turn on stats unix socket
  stats socket /var/lib/haproxy/stats

  # utilize system-wide crypto-policies
  ssl-default-bind-ciphers PROFILE=SYSTEM
  ssl-default-server-ciphers PROFILE=SYSTEM

defaults
  mode                    http
  log                     global
  option                  httplog
  option                  dontlognull
  option http-server-close
  option forwardfor       except 127.0.0.0/8
  option                  redispatch
  option http-buffer-request
  retries                 3
  timeout http-request    5s
  timeout queue           1m
  timeout connect         10s
  timeout client          30s
  timeout server          1m
  timeout http-keep-alive 10s
  timeout check           10s
  maxconn                 3000
  balance roundrobin

userlist AuthUsers
  user kowladmin password $6$gPD2hZkQ13QXezVJ$FzazY8epYw6bpQy80s.k8tHzwRe1Hqfcnx5nF2Bju9qDRw2u8zDXrZ56jxAdTJr6LldC3ztXrH3.HcAgRgHzk/

# Single http
frontend http-in
  mode http
  bind *:80
  http-request set-header X-Content-Type-Options "nosniff"
  http-request set-header X-Frame-Options "sameorigin"
  http-request set-header X-XSS-Protection "1; mode=block"
  http-request set-header Cache-control "no-cache"
  http-request set-header Content-Security-Policy "default-src 'self'; font-src 'self'; img-src 'self'; script-src 'self'; style-src 'self'; frame-src 'self'"
  http-request set-header Permissions-Policy "camera=(), geolocation=(), microphone=()"
  http-request set-header Referrer-Policy "same-origin"
  http-request track-sc0 src table per_ip_rates
# Tarpit abusers
  # timeout tarpit 5s
  # http-request tarpit if { sc_http_req_rate(0) gt 100 }
# Silently Dropping Requests
  http-request silent-drop if { sc_http_req_rate(0) gt 100 }
  http-request deny unless { req.hdr(user-agent) -m found }
  use_backend grafana_backend if { path /grafana } or { path_beg /grafana/ }
  use_backend prometheus_backend if { path /prometheus } or { path_beg /prometheus/ }
  use_backend minio_backend if { path /minio } or { path_beg /minio/ }
  acl PATH_cart  path_beg -i /kafka/
  acl PATH_cart  path_beg -i /kafka
  acl authusers_acl http_auth(AuthUsers)
  http-request auth realm kafka_backend  if PATH_cart !authusers_acl
  use_backend kafka_backend if PATH_cart

# Frontend for loki Simple scalable deployment mode
frontend loki
  mode http
  bind *:3100
  acl internal_networks src 192.168.0.0/16 172.16.0.0/12 10.0.0.0/8 127.0.0.1
  http-request deny if ! internal_networks
  use_backend cluster if { path /ring } or { path_beg /ring/ } or { path /memberlist } or { path_beg /memberlist/ } or { path /config } or { path_beg /config/ } or { path /metrics } or { path_beg /metrics/ } or { path /ready } or { path_beg /ready/ }
  use_backend write if { path /loki/api/v1/push } or { path_beg /loki/api/v1/push }
  use_backend read if { path /loki/api/v1/tail } or { path_beg /loki/api/v1/tail }
  acl query-frontend path_reg /loki/api/.*
  use_backend read if { path_reg /prometheus/api/v1/.* }
  use_backend read if { path_reg /api/prom/.* }
  use_backend query-frontend if query-frontend

# Backend for ip_rates
backend per_ip_rates
  description "ip_rates"
  stick-table type ip size 1m expire 10m store http_req_rate(10s)

# Backend for grafana
backend grafana_backend
  description "grafana"
  http-request set-path %[path,regsub(^/grafana/?,/)]
  server grafana grafana:3000 check

# Backend for prometheus
backend prometheus_backend
  description "prometheus"
  http-request set-path %[path,regsub(^/prometheus/?,/)]
  server prometheus prometheus:9090 check

# Backend for kafka UI
backend kafka_backend
  description "prometheus"
  http-request set-path %[path,regsub(^/kafka/?,/)]
  http-request del-header Authorization
  server kowl kowl:8080 check

# Backend for minio s3
backend minio_backend
  description "Minio"
  balance leastconn
  http-request set-path %[path,regsub(^/minio/?,/)]
  option httpchk GET /minio/health/live
  http-check expect string minio
  server minio minio:9001 check

# Backend for loki read
backend read
  description "loki read"
  balance source
  server loki-read loki-read:3100 check

# Backend for loki write
backend write
  description "loki write"
  balance source
  server loki-write loki-write:3100 check

# Backend for loki cluster
backend cluster
  description "loki cluster"
  balance roundrobin

  server read loki-read:3100 check
  server write loki-write:3100 check

# Backend for loki queri
backend query-frontend
  description "loki query frontend"
  balance roundrobin

  server loki-frontend loki-frontend:3100 check

# Stats Page
listen stats
  bind *:8050
  mode http
  stats enable
  stats uri /stats
  stats hide-version
  stats realm HAProxy\ Statistics
